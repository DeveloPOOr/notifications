<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.tinkoff.notifications.dao.EmployeeDao">

    <resultMap id="EmployeeMap" type="Employee">
        <result property="id" column="e_id"/>
        <result property="birthday" column="e_birthday"/>
        <result property="phone" column="e_phone"/>
        <result property="start_work" column="e_start_work"/>
        <result property="full_name" column="e_full_name"/>
        <result property="city" column="e_city"/>
        <result property="username" column="e_username"/>
        <collection property="projects" ofType="Project" javaType="java.util.HashSet">
            <id property="id" column="proj_id"/>
            <result property="name" column="proj_name"/>
            <result property="description" column="proj_description"/>
        </collection>
        <collection property="wishlist" ofType="Present" javaType="java.util.ArrayList">
            <id property="id" column="pres_id"/>
            <result property="name" column="pres_name"/>
            <result property="link" column="pres_link"/>
            <result property="description" column="pres_description"/>
            <result property="employee_id" column="e_id"/>
        </collection>
    </resultMap>
    <insert id="save" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO employee (birthday, phone, start_work, full_name, city, username)
        VALUES (TO_DATE(#{birthday}, 'YYYY-MM-DD'), #{phone}, TO_DATE(#{start_work}, 'YYYY-MM-DD'), #{full_name},
                #{city}, #{username})
    </insert>

    <select id="findById" resultMap="EmployeeMap">
        SELECT employee.id         AS e_id,
               employee.birthday   AS e_birthday,
               employee.phone      AS e_phone,
               employee.start_work AS e_start_work,
               employee.full_name  AS e_full_name,
               employee.city       AS e_city,
               employee.username   AS e_username,
               proj.id             AS proj_id,
               proj.name           AS proj_name,
               proj.description    AS proj_description,
               pres.id             AS pres_id,
               pres.name           AS pres_name,
               pres.link           AS pres_link,
               pres.description    AS pres_description
        FROM employee
                 LEFT JOIN employee_project_relationship epr ON employee.id = epr.employee_id
                 LEFT JOIN project proj ON epr.project_id = proj.id
                 LEFT JOIN present pres ON employee.id = pres.employee_id
        WHERE employee.id = #{id}
    </select>

    <update id="update" parameterType="Employee">
        UPDATE employee
        SET birthday   = TO_DATE(#{birthday}, 'YYYY-MM-DD'),
            phone      = #{phone},
            start_work = TO_DATE(#{start_work}, 'YYYY-MM-DD'),
            full_name  = #{full_name},
            city       = #{city}
        WHERE id = #{id};
    </update>

    <delete id="delete" parameterType="Employee">
        DELETE
        FROM employee
        WHERE id = #{id};
    </delete>


</mapper>
